import React, { useState, useEffect } from 'react'
import Helmet from 'react-helmet'
import { useGesture } from 'react-with-gesture'

import SEO from '../../globalComponents/seo'

import useScrollLock from './../../lib/useScrollLock'

import '../../style/webGradients.css'

import OuterContainer from './components/OuterContainer'
import InnerContainer from './components/InnerContainer'
import Circle from './components/Circle'
import BlobContainer from './components/BlobContainer'
import Blob from './components/Blob'

const mixBlendModes = [
  'normal',
  'multiply',
  'screen',
  'overlay',
  'darken',
  'lighten',
  'color-dodge',
  'color-burn',
  'hard-light',
  'soft-light',
  'difference',
  'exclusion',
  'hue',
  'saturation',
  'color',
  'luminosity',
]

const planeColors = [
  '#ff9a9e',
  '#fad0c4',
  '#fad0c4',
  '#a18cd1',
  '#fbc2eb',
  '#fad0c4',
  '#fad0c4',
  '#ffd1ff',
  '#ffecd2',
  '#fcb69f',
  '#ff8177',
  '#ff867a',
  '#ff8c7f',
  '#f99185',
  '#cf556c',
  '#b12a5b',
  '#ff9a9e',
  '#fecfef',
  '#fecfef',
  '#f6d365',
  '#fda085',
  '#fbc2eb',
  '#a6c1ee',
  '#fdcbf1',
  '#fdcbf1',
  '#e6dee9',
  '#a1c4fd',
  '#c2e9fb',
  '#d4fc79',
  '#96e6a1',
  '#84fab0',
  '#8fd3f4',
  '#cfd9df',
  '#e2ebf0',
  '#a6c0fe',
  '#f68084',
  '#fccb90',
  '#d57eeb',
  '#e0c3fc',
  '#8ec5fc',
  '#f093fb',
  '#f5576c',
  '#fdfbfb',
  '#ebedee',
  '#4facfe',
  '#00f2fe',
  '#43e97b',
  '#38f9d7',
  '#fa709a',
  '#fee140',
  '#30cfd0',
  '#330867',
  '#a8edea',
  '#fed6e3',
  '#5ee7df',
  '#b490ca',
  '#d299c2',
  '#fef9d7',
  '#f5f7fa',
  '#c3cfe2',
  '#16d9e3',
  '#30c7ec',
  '#46aef7',
  '#667eea',
  '#764ba2',
  '#fdfcfb',
  '#e2d1c3',
  '#89f7fe',
  '#66a6ff',
  '#fddb92',
  '#d1fdff',
  '#9890e3',
  '#b1f4cf',
  '#ebc0fd',
  '#d9ded8',
  '#96fbc4',
  '#f9f586',
  '#2af598',
  '#009efd',
  '#cd9cf2',
  '#f6f3ff',
  '#e4afcb',
  '#b8cbb8',
  '#b8cbb8',
  '#e2c58b',
  '#c2ce9c',
  '#7edbdc',
  '#b8cbb8',
  '#b8cbb8',
  '#b465da',
  '#cf6cc9',
  '#ee609c',
  '#ee609c',
  '#6a11cb',
  '#2575fc',
  '#DCD9D4',
  '#37ecba',
  '#72afd3',
  '#ebbba7',
  '#cfc7f8',
  '#fff1eb',
  '#ace0f9',
  '#eea2a2',
  '#bbc1bf',
  '#57c6e1',
  '#b49fda',
  '#7ac5d8',
  '#989898',
  '#c471f5',
  '#fa71cd',
  '#48c6ef',
  '#6f86d6',
  '#f78ca0',
  '#f9748f',
  '#fd868c',
  '#fe9a8b',
  '#feada6',
  '#f5efef',
  '#e6e9f0',
  '#eef1f5',
  '#accbee',
  '#e7f0fd',
  '#e9defa',
  '#fbfcdb',
  '#c1dfc4',
  '#deecdd',
  '#0ba360',
  '#3cba92',
  '#00c6fb',
  '#005bea',
  '#74ebd5',
  '#9face6',
  '#6a85b6',
  '#bac8e0',
  '#a3bded',
  '#6991c7',
  '#9795f0',
  '#fbc8d4',
  '#a7a6cb',
  'black',
  '#8989ba',
  '#8989ba',
  '#3f51b1',
  '#5a55ae',
  '#7b5fac',
  '#8f6aae',
  '#a86aa4',
  '#cc6b8e',
  '#f18271',
  '#f3a469',
  '#f7c978',
  '#fcc5e4',
  '#fda34b',
  '#ff7882',
  '#c8699e',
  '#7046aa',
  '#0c1db8',
  '#020f75',
  '#dbdcd7',
  '#dddcd7',
  '#e2c9cc',
  '#e7627d',
  '#b8235a',
  '#801357',
  '#3d1635',
  '#1c1a27',
  '#f43b47',
  '#453a94',
  '#4fb576',
  '#44c489',
  '#28a9ae',
  '#28a2b7',
  '#4c7788',
  '#6c4f63',
  '#432c39',
  '#0250c5',
  '#d43f8d',
  '#88d3ce',
  '#6e45e2',
  '#d9afd9',
  '#97d9e1',
  '#7028e4',
  '#e5b2ca',
  '#13547a',
  '#80d0c7',
  '#BDBBBE',
  '#9D9EA3',
  '#505285',
  '#585e92',
  '#65689f',
  '#7474b0',
  '#7e7ebb',
  '#8389c7',
  '#9795d4',
  '#a2a1dc',
  '#b5aee4',
  '#ff0844',
  '#ffb199',
  '#C9CCD3',
  '#93a5cf',
  '#e4efe9',
  '#434343',
  '#0c3483',
  '#a2b6df',
  '#6b8cce',
  '#a2b6df',
  '#93a5cf',
  '#e4efe9',
  '#92fe9d',
  '#00c9ff',
  '#ff758c',
  '#ff7eb3',
  '#868f96',
  '#596164',
  '#c79081',
  '#dfa579',
  '#8baaaa',
  '#ae8b9c',
  '#f83600',
  '#f9d423',
  '#b721ff',
  '#21d4fd',
  '#6e45e2',
  '#88d3ce',
  '#d558c8',
  '#24d292',
  '#abecd6',
  '#fbed96',
  '#d5d4d0',
  'white',
  '#d5d4d0',
  '#eeeeec',
  '#efeeec',
  '#e9e9e7',
  '#5f72bd',
  '#9b23ea',
  '#09203f',
  '#537895',
  '#ddd6f3',
  '#faaca8',
  '#faaca8',
  '#dcb0ed',
  '#99c99c',
  '#f3e7e9',
  '#e3eeff',
  '#e3eeff',
  '#c71d6f',
  '#d09693',
  '#96deda',
  '#50c9c3',
  '#f77062',
  '#fe5196',
  '#c4c5c7',
  '#dcdddf',
  '#ebebeb',
  '#a8caba',
  '#5d4157',
  '#29323c',
  '#485563',
  '#16a085',
  '#f4d03f',
  '#ff5858',
  '#f09819',
  '#2b5876',
  '#4e4376',
  '#00cdac',
  '#8ddad5',
  '#BCC5CE',
  '#929EAD',
  '#4481eb',
  '#04befe',
  '#dad4ec',
  '#dad4ec',
  '#f3e7e9',
  '#874da2',
  '#c43a30',
  '#4481eb',
  '#04befe',
  '#e8198b',
  '#c7eafd',
  '#EADFDF',
  '#ECE2DF',
  '#f794a4',
  '#fdd6bd',
  '#64b3f4',
  '#c2e59c',
  '#3b41c5',
  '#a981bb',
  '#ffc8a9',
  '#0fd850',
  '#f9f047',
  '#e0e0e0',
  '#efefef',
  '#d9d9d9',
  '#bcbcbc',
  '#ee9ca7',
  '#ffdde1',
  '#3ab5b0',
  '#3d99be',
  '#56317a',
  '#CDDCDC',
  '#209cff',
  '#68e0cf',
  '#bdc2e8',
  '#bdc2e8',
  '#e6dee9',
  '#e6b980',
  '#eacda3',
  '#1e3c72',
  '#1e3c72',
  '#2a5298',
  '#d5dee7',
  '#ffafbd',
  '#c9ffbf',
  '#9be15d',
  '#00e3ae',
  '#ed6ea0',
  '#ec8c69',
  '#ffc3a0',
  '#ffafbd',
  '#cc208e',
  '#6713d2',
  '#b3ffab',
  '#12fff7',
  '#D5DEE7',
  '#E8EBF2',
  '#E2E7ED',
  '#65bd60',
  '#5ac1a8',
  '#3ec6ed',
  '#b7ddb7',
  '#fef381',
  '#243949',
  '#517fa4',
  '#fc6076',
  '#ff9a44',
  '#dfe9f3',
  '#323232',
  '#3F3F3F',
  '#1C1C1C',
  '#00dbde',
  '#fc00ff',
  '#f9d423',
  '#ff4e50',
  '#50cc7f',
  '#f5d100',
  '#0acffe',
  '#495aff',
  '#616161',
  '#9bc5c3',
  '#E4E4E1',
  '#3d3393',
  '#2b76b9',
  '#2cacd1',
  '#35eb93',
  '#df89b5',
  '#bfd9fe',
  '#ed6ea0',
  '#ec8c69',
  '#d7d2cc',
  '#304352',
  '#e14fad',
  '#f9d423',
  '#b224ef',
  '#7579ff',
  '#c1c161',
  '#c1c161',
  '#d4d4b1',
  '#ec77ab',
  '#7873f5',
  '#007adf',
  '#00ecbc',
  '#20E2D7',
  '#F9FEA5',
  '#2CD8D5',
  '#C5C1FF',
  '#FFBAC3',
  '#2CD8D5',
  '#6B8DD6',
  '#8E37D7',
  '#DFFFCD',
  '#90F9C4',
  '#39F3BB',
  '#5D9FFF',
  '#B8DCFF',
  '#6BBBFF',
  '#A8BFFF',
  '#884D80',
  '#5271C4',
  '#B19FFF',
  '#ECA1FE',
  '#FFE29F',
  '#FFA99F',
  '#FF719A',
  '#22E1FF',
  '#1D8FE1',
  '#625EB1',
  '#B6CEE8',
  '#F578DC',
  '#FFFEFF',
  '#D7FFFE',
  '#E3FDF5',
  '#FFE6FA',
  '#7DE2FC',
  '#B9B6E5',
  '#CBBACC',
  '#2580B3',
  '#B7F8DB',
  '#50A7C2',
  '#7085B6',
  '#87A7D9',
  '#DEF3F8',
  '#77FFD2',
  '#6297DB',
  '#1EECFF',
  '#AC32E4',
  '#7918F2',
  '#4801FF',
  '#D4FFEC',
  '#57F2CC',
  '#4596FB',
  '#9EFBD3',
  '#57E9F2',
  '#45D4FB',
  '#473B7B',
  '#3584A7',
  '#30D2BE',
  '#65379B',
  '#886AEA',
  '#6457C6',
  '#A445B2',
  '#D41872',
  '#FF0066',
  '#7742B2',
  '#F180FF',
  '#FD8BD9',
  '#FF3CAC',
  '#562B7C',
  '#2B86C5',
  '#FF057C',
  '#8D0B93',
  '#321575',
  '#FF057C',
  '#7C64D5',
  '#4CC3FF',
  '#69EACB',
  '#EACCF8',
  '#6654F1',
  '#231557',
  '#44107A',
  '#FF1361',
  '#FFF800',
  '#3D4E81',
  '#5753C9',
  '#6E7FF3',
]

const windowGlobal = typeof window !== 'undefined' && window

const blobs = [
  { gradient: 'supreme_sky' },
  { gradient: 'light_blue' },
  { gradient: 'mind_crawl' },
  { gradient: 'lily_meadow' },
  { gradient: 'sugar_lollipop' },
  { gradient: 'young_passion' },
  { gradient: 'fabled_sunset' },
  { gradient: 'teen_party' },
  { gradient: 'frozen_heat' },
]

const createBlob = ({ gradient }, i, array) => {
  const segment = (360 / array.length) * i
  return (
    <BlobContainer key={i} segment={segment}>
      <Blob className={gradient} />
    </BlobContainer>
  )
}

const activatePanel = x => {
  const panels = 3
  const limiter = windowGlobal.innerWidth / (panels - 1)
  const panelLimit = x / limiter
  return Math.abs(Math.round(panelLimit))
}

const setPlaneValue = (y, callback, stack) => {
  const limiter = windowGlobal.innerHeight / (stack.length - 1)
  const stackPieceLimit = y / limiter
  const selectedIndex = Math.abs(Math.round(stackPieceLimit))
  callback(stack[selectedIndex])
}

export default function ShiftingSuns() {
  const [handlers, { xy }] = useGesture()
  const [outerBackground, setOuterBackground] = useState(planeColors[0])
  const [innerBackground, setInnerBackground] = useState(planeColors[0])
  const [mixBlendMode, setMixBlendMode] = useState('multiply')

  useScrollLock()

  useEffect(() => {
    const [x, y] = xy
    const activeColumnNumber = activatePanel(x)

    if (activeColumnNumber === 0) {
      setPlaneValue(y, setInnerBackground, planeColors)
    } else if (activeColumnNumber === 1) {
      setPlaneValue(y, setMixBlendMode, mixBlendModes)
    } else if (activeColumnNumber === 2) {
      setPlaneValue(y, setOuterBackground, planeColors)
    }
  }, [xy])

  return (
    <div {...handlers()}>
      <Helmet
        style={[
          {
            cssText: `
            html, body {
              margin: 0;
              height: 100%;
              overscroll-behavior: none;
            }`,
          },
        ]}
      />
      <SEO title="Shifting Suns" />
      <OuterContainer style={{ backgroundColor: outerBackground }}>
        <InnerContainer style={{ backgroundColor: innerBackground }}>
          <Circle style={{ mixBlendMode }} className={'mean_fruit'}>
            {blobs.map(createBlob)}
          </Circle>
        </InnerContainer>
      </OuterContainer>
    </div>
  )
}
